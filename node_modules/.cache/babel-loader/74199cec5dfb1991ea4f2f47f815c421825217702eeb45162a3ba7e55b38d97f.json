{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n  const _component_Tasks = _resolveComponent(\"Tasks\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header, {\n    title: \"Task Tracker\"\n  }), _createVNode(_component_AddTask), _createVNode(_component_Tasks, {\n    onToggleReminder: $options.toggleReminder,\n    onDeleteTask: $options.deleteTask,\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])]);\n}","map":{"version":3,"mappings":";;EAGOA,KAAK,EAAC;AAAW;;;;;uBAAtBC,oBAIM,OAJNC,UAIM,GAHJC,aAA+BC;IAAvBC,KAAK,EAAC;EAAc,IAC5BF,aAAWG,qBACXH,aAAoFI;IAA5EC,gBAAe,EAAEC,uBAAc;IAAGC,YAAW,EAAED,mBAAU;IAAGE,KAAK,EAAEC","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Header","title","_component_AddTask","_component_Tasks","onToggleReminder","$options","onDeleteTask","tasks","$data"],"sourceRoot":"","sources":["/Users/rorymartin/Documents/repos/vue-practice/vue-crash-2021/src/App.vue"],"sourcesContent":["<!-- npm run serve -->\n\n<template>\n  <div class=\"container\">\n    <Header title=\"Task Tracker\" />\n    <AddTask />\n    <Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"deleteTask\" :tasks=\"tasks\" />\n  </div>\n</template>\n\n<script>\nimport Header from './components/Header'\nimport Tasks from  './components/Tasks'\nimport AddTask from  './components/AddTask'\n\nexport default {\n  name: 'App',\n  components: {\n    Header,\n    Tasks,\n    AddTask\n  },\n  data() {\n    return {\n      tasks: []\n    }\n  },\n  methods: {\n    deleteTask(id){\n      if (confirm('Are you sure?')){\n        this.tasks = this.tasks.filter((task) => task.id !== id)\n      }\n    },\n    toggleReminder(id){\n      this.tasks = this.tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task)\n    }\n  },\n  created() {\n    this.tasks = [\n      {\n        id: 1,\n        text: \"Doctors Appointment\",\n        day: \"March 1st at 2.30pm\",\n        reminder: true,\n      },\n      {\n        id: 2,\n        text: \"Workout\",\n        day: \"March 4stat 09.00am\",\n        reminder: true,\n      },\n      {\n        id: 3,\n        text: \"Swimming Appointment\",\n        day: \"March 1st at 2.30pm\",\n        reminder: false,\n      },\n    ]\n  }\n}\n</script>\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n\n.btn:focus {\n  outline: none;\n}\n\n.btn:active {\n  transform: scale(0.98);\n}\n\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}